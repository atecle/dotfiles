"" Settings

syntax on                 " Set syntax highlighting on
set nu                    " Set line numbers on
filetype plugin indent on " Detect filetype, load the filetype plugin, and load indent file
set wildmenu              " Better command-line completion
set paste
set backspace=2
set tabstop=2             " size of a hard tabstop
set shiftwidth=2          " size of an indent
set softtabstop=2         " a combination of spaces and tabs are used to simulate tab stops at a width other than the (hard)tabstop
set smarttab              " make tab insert indents instead of tabs at beginning of a line
set expandtab             " always uses spaces instead of tab chracters
set autoindent
set smartindent
set nocompatible          " Backwards compatible with vi
set cursorline            " highlight the current line
set showmatch             " highlight matching [{()}]
set incsearch             " search as characters are entered
set hlsearch              " highlight matches
hi Comment ctermfg=LightBlue " Better color for comments

"" Start up defaults 

autocmd vimenter * NERDTree " Open NERDTree automatically 
au BufRead,BufNewFile Podfile set filetype=ruby " Set syntax=ruby for Podfile
au BufRead,BufNewFile Brewfile set filetype=ruby " Set syntax=ruby for Podfile
au BufRead,BufNewFile *.podspec set filetype=ruby " Set syntax=ruby for Podfile
au BufNewFile,BufRead *.gradle setf groovy " Set syntax highling for gradle
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif " quit NERDTree if only one file left

"" Key mapping

" Map Y to act like D and C, i.e. to yank until EOL, rather than act as yy,
" which is the default
map Y y$
nmap <F6> :NERDTreeToggle<CR>

call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'pangloss/vim-javascript'
Plug 'leafgarland/typescript-vim'
Plug 'cfdrake/vim-pbxproj'

call plug#end()

